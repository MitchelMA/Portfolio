@inherits LayoutComponentBase

@inject AppState AppState;
@inject ProjectState ProjectState;
@inject NavigationManager NavManager;
@inject ProjectInfoGetter Getter
@inject IJSRuntime JsRuntime

@using Portfolio.Client
@using Portfolio.Model.Project
@implements IDisposable;

<div class="page">
    <TopHeader HeaderImg="@AppState.HeaderImgPath"
               Title="@AppState.HeaderTitle"
               UnderTitle="@AppState.HeaderUnderTitle"
               ScrollToId="main_content"
               ExtraText="@AppState.HeaderDescription"
               Style="@AppState.HeaderExtraStyles"/>

    <TopNav Links="@AppState.Links"
            MinNonStackedSize="@AppState.MinNonStackedSize"/>

    <main class="main-content" id="main_content">
        <div class="main-content__inner">
            <MainAside>
                <Main>
                    <PageIsland IslandTitle="Info">
                        <article style="display: flex; justify-content: center;">
                            <table class="styled-table">
                                <thead>
                                <tr>
                                    <th>Duur</th>
                                    <th>Groep grootte</th>
                                    <th>Talen/Software</th>
                                </tr>
                                </thead>
                                <tbody>
                                <tr>
                                    <td>@_model?.Planning.Duration</td>
                                    <td>@_model?.Planning.PeopleCount</td>
                                    <td>@_model?.Planning.Software</td>
                                </tr>
                                </tbody>
                            </table>
                        </article>
                    </PageIsland>
                    @Body
                </Main>
                <Right>
                    <ProjectsNav 
                        GitHubLink=@($"https://github.com/MitchelMA/{ProjectState.PageEndGithub}") />
                </Right>
            </MainAside>
        </div>
    </main>


    @if (AppState.ShowFooter)
    {
        <Footer>
            <MainSection>
                <h5 style="margin-bottom: 0">Mitchel Vonk©</h5>
            </MainSection>
        </Footer>
    }

    <ProjStateIndicator ProjectStatus="@ProjectState.ProjectStatus"/>

    <ToTopBtn/>
</div>

@code {

    private ProjectDataModel? _model;

    protected override void OnInitialized()
    {
        AppState.StateChangedAsync += AppStateChanged;
        ProjectState.StateChanged += ProjectStateChanged;
        NavManager.LocationChanged += OnLocationChanged;
    }

    protected override async Task OnInitializedAsync()
    {
        _model = await Getter.GetCorrespondingToUri();
        StateHasChanged();
    }

    public void Dispose()
    {
        AppState.StateChangedAsync -= AppStateChanged;
        ProjectState.StateChanged -= ProjectStateChanged;
        NavManager.LocationChanged -= OnLocationChanged;
    }

    private async Task AppStateChanged()
    {
        await CheckScroll();
        StateHasChanged();
    }

    private void ProjectStateChanged()
    {
        StateHasChanged();
    }

    private async void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        _model = await Getter.GetCorrespondingToUri();
    }

    private async Task CheckScroll()
    {
        if (AppState.ScrollLocked)
        {
            await JsRuntime.InvokeVoidAsync("lockScroll", StaticData.LockedClassName);
        }
        else
        {
            await JsRuntime.InvokeVoidAsync("unlockScroll", StaticData.LockedClassName);
        }
    }

}