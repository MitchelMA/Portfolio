@using Portfolio.Client

@inherits LayoutComponentBase

@implements IDisposable

@inject AppState AppState
@inject IJSRuntime JsRuntime

<div class="page">
    <TopHeader HeaderImg="@AppState.HeaderImgPath"
               Title="@AppState.HeaderTitle"
               UnderTitle="@AppState.HeaderUnderTitle"
               ScrollToId="main_content"
               ExtraText="@AppState.HeaderDescription"
               Style="@AppState.HeaderExtraStyles"/>

    <TopNav Links="AppState.Links"
            MinNonStackedSize="AppState.MinNonStackedSize"/>

    <main class="main-content" id="main_content">
        <div class="main-content__inner">
            @Body
        </div>
    </main>
    @if (AppState.ShowFooter)
    {
        <Footer>
            <MainSection>
                <h5 style="margin-bottom: 0">Mitchel Vonk©</h5>
            </MainSection>
        </Footer>
    }
    <ToTopBtn/>
</div>

@code {

    protected override void OnInitialized()
    {
        AppState.StateChangedAsync += StateChanged;
        AppState.ShowFooter = true;
    }

    private async Task StateChanged()
    {
        await CheckScroll();
        StateHasChanged();
    }

    private async Task CheckScroll()
    {
        if (AppState.ScrollLocked)
        {
            await JsRuntime.InvokeVoidAsync("lockScroll", StaticData.LockedClassName);
        }
        else
        {
            await JsRuntime.InvokeVoidAsync("unlockScroll", StaticData.LockedClassName);
        }
    }

    public void Dispose()
    {
        AppState.StateChangedAsync -= StateChanged;
    }

}