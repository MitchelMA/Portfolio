@page "/towerdefense"
@using Portfolio.Client
@using Portfolio.Model.Project

@layout ProjectLayout

@inject AppState AppState
@inject ProjectInfoGetter Getter
@inject ProjectState ProjectState
@inject LightboxRegistry Registry

<PageIsland IslandTitle="Introductie" id="iductie">
    <ChildContent>
        <LightboxImg src="./images/Unity_4xajzJxaDR.jpg"
                     alt="De map van het spel"
                     class="hover-scale sc075"
                     style="max-width: 100%;"
                     BoundLightboxName="@nameof(TowerDefense)"
                     Registry="Registry"/>
    </ChildContent>
</PageIsland>

<Lightbox LightboxName="@nameof(TowerDefense)"
          Registry="Registry"/>

@code {

    private static readonly NavLinkData[] Links =
    {
        new("#iductie", "Introductie"),
    };

    private static ProjectDataModel? _model;

    private static readonly HeaderData HeaderData = new()
    {
        ImagePath = "./images/Unity_4xajzJxaDR.jpg",
        Title = "Tower-defense",
        UnderTitle = "Eerste game helemaal zelf"
    };


    protected override async Task OnInitializedAsync()
    {
        _model = await Getter.GetWithHref();
        HeaderData.ImagePath = _model?.Header.HeaderImage ?? "";
        HeaderData.Title = _model?.Header.HeaderTitle ?? "";
        HeaderData.UnderTitle = _model?.Header.UnderTitle ?? "";
        
        AppState.PageTitleExtension = _model?.TitleExtension ?? "";
        AppState.Links = Links;
        AppState.MinNonStackedSize = 480;
        AppState.HeaderData = HeaderData;
        AppState.PageIcon = StaticData.DefaultPageIcon;
        AppState.ShowFooter = true;

        ProjectState.ProjectStatus = _model?.Status ?? ProjectStatus.Done;
        ProjectState.PageEndGithub = _model?.GitHub;
    }

}