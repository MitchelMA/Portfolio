@page "/"

@using Portfolio.Client
@using Portfolio.Model.Text

@inject AppState AppState
@inject LightboxRegistry LightboxRegistry
@inject LanguageTable LanguageTable

<PageIsland IslandTitle="Projects" id="projects">
    <ChildContent>
        <Carousel FromJsonFile="./ProjectData/Projects.json"
                  DelayAmount="7000"
                  StartIdx="1"/>
    </ChildContent>
</PageIsland>

<PageIsland IslandTitle="About Me" id="about">
    <ChildContent>
        @* <p>Dit is de content van de About Me Island</p> *@
        <TwoView
            style="padding: 0 0.8rem; align-items: center; flex-wrap:  wrap;"
            FlexValues="@(new ValueTuple<string, string>("2 2 300px", "1 0"))">
            <FirstView>
                <section style="font-size: 1.1rem;">
                    <p>
                        Ik ben Mitchel Vonk, geboren te Beverwijk en wonend in Heemskerk. Ik vind programmeren in C#
                        erg leuk
                        en fijn (deze portfolio is gemaakt in blazor pages)! Ik leer er dagelijks nieuwe dingen in.
                    </p>
                    <hr/>
                    <p>
                        Ik programmeer al sinds begin 2019 met JavaScript in de browser. Ik was voornamelijk begonnen om
                        wiskundige formules uit te werken (ik heb alijd al van wiskunde gehouden).
                        Ook heb ik kleine spelletjes gemaakt in JavaScript in de browser, en was ik begonnen met het
                        maken van Console-applications in Python
                    </p>
                    <hr/>
                    <p>
                        Toen ik in 2021 mijn Havo met succes afrondde, begon ik aan mijn vervolg-opleiding: Software Developer
                        aan het Mediacollege Amsterdam. In het eerste halfjaar van jaar één hebben we daar met Python gewerkt.
                        Aan het einde van dit halve jaar, kregen we de keuze of we Media-Developer wilde worden of Game-Developer.
                        Toen heb ik de keuze gemaakt voor Game-Developer.
                    </p>
                    <hr/>
                    <p>
                        Naast programmeren ga ik graag om met vrienden, welke voort zijn gekomen uit een hechte groep die was
                        gevormd aan het begin van mijn middelbare school periode. Ook sport ik erg graag en heb ik ook al redelijk
                        wat beoefend: skiën, schaatsen en snowboarden. En ga ik wekelijks naar de sportschool.
                    </p>
                </section>
            </FirstView>
            <SecondView>
                <article style="display: flex; justify-content: center;">
                    <LightboxImg
                        BoundLightboxName="Welkom Lightbox"
                        Registry="LightboxRegistry"
                        class="hover-scale sc075"
                        src="./images/AboutMeCropped.webp"
                        alt="Foto van mij op wintersport"
                        height="500"
                        style="border-radius: var(--border-radius-small);"/>
                </article>
            </SecondView>
        </TwoView>
    </ChildContent>
</PageIsland>

<PageIsland IslandTitle="Contact Me" id="contact">
    <ChildContent>
        <div style="display: flex; margin-top: 2rem;">
            <section
                style="
                width: 100%;
                max-width: var(--content-max-width-xs);
                margin: 0 auto;
                display: flex;
                flex-wrap: wrap;
                justify-content: space-evenly;">

                <a class="contact-link hover-scale"
                   href="https://www.linkedin.com/in/mitchel-vonk-87155024b/"
                   target="_blank"
                   style="flex-basis: 150px;">
                    <i class="bi bi-linkedin"
                       style="font-size: 4rem; color:  var(--accent-colour);">
                    </i> 
                    <span>LinkedIn</span>
                </a>

                <a class="contact-link hover-scale"
                   href="https://github.com/MitchelMA"
                   target="_blank"
                   style="flex-basis: 150px;">
                    <i class="bi bi-github"
                       style="font-size: 4rem; color: var(--accent-colour);">
                    </i>
                    <span>GitHub</span>
                </a>

                <a class="contact-link hover-scale"
                   href="mailto:vonkm124@gmail.com?SUBJECT=Reagerend%20op%20Portfolio"
                   target="_blank"
                   style="flex-basis: 150px;">
                    <i class="bi bi-mailbox2"
                       style="font-size: 4rem; color:  var(--accent-colour);">
                    </i>
                    <span>E-mail</span>
                </a>
            </section>
        </div>
    </ChildContent>
</PageIsland>

<Lightbox LightboxName="Welkom Lightbox"
          Registry="LightboxRegistry"/>

@code {

    private static readonly NavLinkData[]? Links =
    {
        new("#projects", "Projects"),
        new("#about", "About Me"),
        new("#contact", "Contact Me"),
        new(@".\cv.pdf", "CV", true),
    };

    private static readonly LinkTag PageIcon = new PageIcon("image/webp", "./images/AboutMeCroppedHead.webp");

    private HeaderData _headerData = new()
    {
        ImagePath = StaticData.MainHeaderImgPath,
    };

    protected override async Task OnInitializedAsync()
    {
        AppState.PageTitleExtension = string.Empty;
        AppState.Links = Links;
        AppState.MinNonStackedSize = 650;
        AppState.PageIcon = PageIcon;
        
        await LoadContent();
    }

    private async Task LoadContent()
    {
        if (LanguageTable.IsLoaded)
        {
            await SetLangData();
            return;
        }

        LanguageTable.ManifestLoadedAsync += OnManifestLoaded;
    }

    private async Task SetLangData()
    {
        var currentData = await LanguageTable.LoadCurrentPageData();
        if (currentData is null)
        {
            await Console.Error.WriteLineAsync("Couldn't get Page Data in specified language!");
            return;
        }
        
        SetPageContent(currentData.Value);
        LanguageTable.ManifestLoadedAsync -= OnManifestLoaded;
    }

    private void SetPageContent(LangPageData langPageData)
    {
        _headerData.Title = langPageData.HeaderData.Title;
        _headerData.UnderTitle = langPageData.HeaderData.UnderTitle;
        _headerData.Description = langPageData.HeaderData.Description;
        AppState.HeaderData = _headerData;
    }

    private async Task OnManifestLoaded(object? sender) =>
        await SetLangData();

}